int add(int a,int b)//static使用会让外部函数无法调用
{
	return a+b;
}
===================================================================
#include <stdio.h>
#include <string.h>

//int match(int a,int b)
//{
//	if (a>b)
//		{
//			printf("%d>%d\n",a,b);
//		}
//	else
//		{
//			printf("%d>%d\n",b,a);
//		}
//	return 0;
//}
//
//int main()
//{
//	match(101,999);
//	return 0;
//}
//=======================================
//~按位取反

//int main()
//{
//	int a=10;
//	int b=a++;//后置++先赋值，在自加1 类似a--
//	int c=++a;//前置++先加1后赋值 类似--a
//	printf("a=%d\nb=%d\nc=%d\n",a,b,c);
//	return 0;
//}
//==============================================
// < > <= >= == !=
//int main()
//{
//	int a=(int)6.77f;//(类型)强制转换
//	printf("%d\n",a);
//	return 0;
//}
//==============================================
//&& and意思, ||or意思
//真-非0  假-0
//int main()
//{
//	int a=0;
//	int b=3;
//	int c=a && b;
//	int d=a || b;
//	printf("%d\n",c);//0
//	printf("%d\n",d);//1
//	return 0;
//}
//===================================================

//int main()
//{
//	int a=10;int b=20;int max;
//	max=(a>b ? a:b);
//	printf("%d\n",max);
//	return 0;
//}
//================================================
//int main()
//{
//	int a=0;int b=0;
//	scanf("%d%d",&a,&b);
//	(a>b ? printf("较大的a=%d\n",a):printf("较大的b=%d\n",b));
//	return 0;
//}
//===========================================

//int main()
//{
//	//register int a=10;//建议把定义成为寄存器变量
//	//auto int b=0;
//	//unsigned int c=0;//无符号数
//	//struct-结构体关键字
//	//union-联合体、共用体
//	typedef unsigned int u_int;//类型重定义
//	u_int a=0;
//	return 0;
//}
//===========================================

//void test()
//{
//	static int a=1;
//	//static
//	//(修饰局部变量,局部变量的寿命增加)
//	//(修饰全局变量，全局变量的作用域只能在自己的源文件中使用)a是一个静态变量
//	a++;
//	printf("a=%d\n",a);
//}
//int main()
//{
//	int i=0;
//	while (i<1000)
//	{
//		test();
//		i++;
//	}
//	return 0;
//}
//===================================================
//#define haoquan 100
//#define MAX(X,Y) (X>Y?X:Y)
//extern int add(int,int);//声明了外部函数
//int main()
//{
//	int a=haoquan;
//	int b=20;
//	int sum=add(a,b);
//	printf("%d\n",sum);
//	printf("%d\n",MAX(a,b));
//	return 0;
//}
//================================================

int main()
{
	//指针大小在32位中为4个字节，在64位中为8个字节
	int a=10;
	int* p= &a;
	*p=20;//解引用操作符
	printf("%p\n",&a);//&a取a的地址
	printf("%d\n",a);
	return 0;
}
